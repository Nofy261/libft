ft_lstadd_front

void ft_lstadd_front(t_list **lst, t_list *new);


Ajoute un maillon en debut de liste


Ne retourne rien void


ptr->content (acceder au contenu du 1er maillon)    
ptr->next->content (acceder au contenu du 2eme maillon)



/int    main()
//{
    // Déclaration d'un pointeur vers la tête de liste
    //t_list *lst;
    //lst = NULL;
    
    // Déclaration de deux nouveaux éléments de la liste
    //t_list    *new1;           // Premier nouvel élément
    //t_list    *new_2;          // Deuxième nouvel élément

    // Chaînes de caractères à stocker dans la liste
    //char str[] = "bonjour";  // Contenu du premier élément
    //char str2[] = "salut";   // Contenu du deuxième élément

    // Création des nouveaux éléments
    //new1 = ft_lstnew(str);   // Crée un élément avec le contenu "bonjour"
    //new_2 = ft_lstnew(str2); // Crée un élément avec le contenu "salut"
    
    // Ajout des éléments en tête de liste
    //ft_lstadd_front(&lst, new1);  // Ajoute l'élément "bonjour" en tête de liste
    //ft_lstadd_front(&lst, new_2); // Ajoute l'élément "salut" en tête de liste
    
    Affichage des contenus des éléments de la liste
   printf("%s\n", (char *)lst->content);         // Affiche le contenu du premier élément ("salut")
   printf("%s\n", (char *)lst->next->content);   // Affiche le contenu du deuxième élément ("bonjour")
    
    return (0);
}

Dans la liste chainee = new2("salut" | ptrnext) ---> new1("bonjour" | ptrnext)


new2 est en premiere position car on l'a ajouter apres new1. 

