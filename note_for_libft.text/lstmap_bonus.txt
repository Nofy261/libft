

t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))


ft_lstmap transforme chaque élément d'une liste chaînée en appliquant une fonction, tout en créant une nouvelle liste chaînée avec ces éléments transformés. Elle gère aussi les erreurs en nettoyant la mémoire si une opération échoue.






void    *to_upper(void *content)
{
    char    *str;
    int        i;

    str = (char *)content;
    i = 0;
    while (str[i])
    {
        if (str[i] >= 'a' && str[i] <= 'z')
            str[i] -= 32;
        i++;
    }
    return (content);
}

void    del(void *content)
{
    free(content); 
}




#include <stdio.h>

int main(void)
{
	t_list	*ptr;
	ptr = NULL;

	t_list	*node1;
	t_list	*node2;
	t_list	*node3;
	
	char	content1[] = "Un";
	char	content2[] = "Deux";
	char	content3[] = "Trois";
	
	node1 = ft_lstnew(content1);
	node2 = ft_lstnew(content2);
	node3 = ft_lstnew(content3);

	ft_lstadd_back(&ptr, node1);
	ft_lstadd_back(&ptr, node2);
	ft_lstadd_back(&ptr, node3);

	t_list *new_list = ft_lstmap(ptr, to_upper, del);
	while (new_list)
	{
		printf("%s\n", (char *)new_list->content);
		new_list = new_list->next;
	}
	return (0);
	
}
